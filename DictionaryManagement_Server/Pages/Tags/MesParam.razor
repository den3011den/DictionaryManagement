@page "/tags/MesParam"
@attribute [Authorize]


@using DictionaryManagement_Business.Repository.IRepository;
@using DictionaryManagement_DataAccess.Data.IntDB;
@using DictionaryManagement_Models.IntDBModels
@using Microsoft.EntityFrameworkCore;
@using System.Text.Json;


@inject IJSRuntime _jsRuntime
@inject IMesParamRepository _mesParamRepository

@inject DialogService _dialogService



@if (IsAdmin == true)
{
    <_Dialogs @ref="_dialogs"></_Dialogs>



    <div class="row">

        <div class="col-6">
            <h4 class="card-title text-primary"><a href="/tags">Тэги</a> - <a href="/tags/MesParam">Тэги СИР</a></h4>
        </div>


        @if (IsLoading != true)
        {

            @*<div style="word-wrap: normal">*@
            <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Добавить новый тэг СИР" Click="@(args => EditRow(null))" />
            <RadzenDataGrid @bind-Settings="@MesParamGridSettings" @ref="mesParamDTOGrid" AllowAlternatingRows="false" AllowFiltering="true" PageSize="5" AllowPaging="true" AllowSorting="true" AllowMultiColumnSorting="true" EditMode="DataGridEditMode.Single"
                            Data="@mesParamDTOs" TItem="MesParamDTO"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            FilterMode="FilterMode.Simple"
                            AllowColumnResize="true"
                            Density=Density.Compact
                            ShowPagingSummary="true"
                            EmptyText="Нет записей для отображения"
                            AllowVirtualization="true">
                <Columns>
                    <RadzenDataGridColumn TItem="MesParamDTO" Property="Id" Title="Ид записи" Width="35px">
                        @*                    <EditTemplate Context="data1">
                <div class="rz-text-wrap">@data1.Id</div>
                </EditTemplate>*@
                    </RadzenDataGridColumn>


                    <RadzenDataGridColumn TItem="MesParamDTO" Property="Code" Title="Код тэга СИР" Width="70px">
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="Name" Title="Наименование" Width="100px">
                        <Template Context="data1">
                            <RadzenCard Style="white-space:pre-wrap">
                                <RadzenText TextStyle="TextStyle.Body2">
                                    <strong>
                                        @data1.Name
                                    </strong>
                                </RadzenText>
                            </RadzenCard>
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="MesParamSourceTypeDTOFK" Title="Источник" Width="80px" FilterProperty="MesParamSourceTypeDTOFK.ToStringValue" SortProperty="MesParamSourceTypeDTOFK.ToStringValue">
                        <Template Context="data1">
                            <RadzenCard Style="white-space:pre-wrap">
                                <RadzenText TextStyle="TextStyle.Body2">
                                    <strong>
                                        @data1.MesParamSourceTypeDTOFK
                                    </strong>
                                </RadzenText>
                            </RadzenCard>
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="MesParamSourceLink" Title="Тэг источника" Width="100px">
                        @*                    <Template Context="data1">
                <RadzenCard Style="white-space:pre-wrap">
                <RadzenText TextStyle="TextStyle.Body2">
                <strong>
                @data1.MesParamSourceLink
                </strong>
                </RadzenText>
                </RadzenCard>
                </Template>*@
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="SapEquipmentSourceDTOFK" Title="SAP источник" Width="100px" FilterProperty="SapEquipmentSourceDTOFK.ToStringValue" SortProperty="SapEquipmentSourceDTOFK.ToStringValue">
                        <Template Context="data1">
                            <RadzenCard Style="white-space:pre-wrap">
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @data1.SapEquipmentSourceDTOFK
                                </RadzenText>
                            </RadzenCard>
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="SapEquipmentDestDTOFK" Title="SAP приемник" Width="100px" FilterProperty="SapEquipmentDestDTOFK.ToStringValue" SortProperty="SapEquipmentDestDTOFK.ToStringValue">
                        <Template Context="data1">
                            <RadzenCard Style="white-space:pre-wrap">
                                <RadzenText TextStyle="TextStyle.Body2">
                                    @data1.SapEquipmentDestDTOFK
                                </RadzenText>
                            </RadzenCard>
                        </Template>
                    </RadzenDataGridColumn>


                    @if (SD.AppFactoryMode == SD.FactoryMode.NKNH)
                    {
                        <RadzenDataGridColumn TItem="MesParamDTO" Property="MesMaterialDTOFK" Title="Материал MES" Width="70px" FilterProperty="MesMaterialDTOFK.ToStringValue" SortProperty="MesMaterialDTOFK.ToStringValue">
                            <Template Context="data1">
                                <RadzenCard Style="white-space:pre-wrap">
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @data1.MesMaterialDTOFK
                                    </RadzenText>
                                </RadzenCard>
                            </Template>
                        </RadzenDataGridColumn>

                        <RadzenDataGridColumn TItem="MesParamDTO" Property="MesUnitOfMeasureDTOFK" Title="Ед.изм MES" Width="65px" FilterProperty="MesUnitOfMeasureDTOFK.ToStringValue" SortProperty="MesUnitOfMeasureDTOFK.ToStringValue">
                            <Template Context="data1">
                                <RadzenCard Style="white-space:pre-wrap">
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @data1.MesUnitOfMeasureDTOFK
                                    </RadzenText>
                                </RadzenCard>
                            </Template>
                        </RadzenDataGridColumn>
                    }

                    @if (SD.AppFactoryMode == SD.FactoryMode.KOS)
                    {

                        <RadzenDataGridColumn TItem="MesParamDTO" Property="SapMaterialDTOFK" Title="Материал SAP" Width="70px" FilterProperty="SapMaterialDTOFK.ToStringValue" SortProperty="SapMaterialDTOFK.ToStringValue">
                            <Template Context="data1">
                                <RadzenCard Style="white-space:pre-wrap">
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @data1.SapMaterialDTOFK
                                    </RadzenText>
                                </RadzenCard>
                            </Template>
                        </RadzenDataGridColumn>

                        <RadzenDataGridColumn TItem="MesParamDTO" Property="SapUnitOfMeasureDTOFK" Title="Ед.изм SAP" Width="65px" FilterProperty="SapUnitOfMeasureDTOFK.ToStringValue" SortProperty="SapUnitOfMeasureDTOFK.ToStringValue">
                            <Template Context="data1">
                                <RadzenCard Style="white-space:pre-wrap">
                                    <RadzenText TextStyle="TextStyle.Body2">
                                        @data1.SapUnitOfMeasureDTOFK
                                    </RadzenText>
                                </RadzenCard>
                            </Template>
                        </RadzenDataGridColumn>


                    }

                    <RadzenDataGridColumn TItem="MesParamDTO" Property="IsArchive" Title="Арх" Filterable="true" Width="20px">
                        <Template Context="data">
                            <RadzenCheckBox @bind-Value=data.IsArchive ReadOnly="true" TriState="false" TValue="bool" />
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="MesParamDTO" Context="mesParamDTO" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="47px">
                        <Template Context="mesParamDTO">
                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRow(mesParamDTO))" @onclick:stopPropagation="true">
                            </RadzenButton>
                            @if (!mesParamDTO.IsArchive)
                            {
                                <RadzenButton Tooltip="Восстановить из архива" ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(mesParamDTO))" @onclick:stopPropagation="true">
                                </RadzenButton>
                            }
                            else
                            {
                                <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="restore_from_trash" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(mesParamDTO))" @onclick:stopPropagation="true">
                                </RadzenButton>
                            }
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
            @*   </div>*@

        }
        else
        {
            if (IsLoading)
            {
                //отображение gif загрузки
                <div class="text-center">
                    <img src="/images/loading.gif">
                </div>

            }
        }

    </div>

}
@code {

    _Dialogs? _dialogs { get; set; }

    IEnumerable<MesParamDTO>? mesParamDTOs;
   // IEnumerable<MesParamSourceTypeDTO>? mesParamSourceTypeDTOs;

    RadzenDataGrid<MesParamDTO> mesParamDTOGrid;

    public bool IsLoading { get; set; }
    public bool IsAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        //employees = dbContext.Employees.Where(e => e.ReportsTo == null);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            IsAdmin = true;
            if (firstRender)
            {                
                IsLoading = true;
                //StateHasChanged();
                await LoadStateAsync();
                StateHasChanged();
                mesParamDTOs = await _mesParamRepository.GetAll(SD.SelectDictionaryScope.All);
                IsLoading = false;
                StateHasChanged();
            }
        }
        else
            _navigationManager.NavigateTo("/tags");

    }


    DataGridSettings _mesParamGridSettings;
    public DataGridSettings MesParamGridSettings
    {
        get
        {
            return _mesParamGridSettings;
        }
        set
        {
            if (_mesParamGridSettings != value)
            {
                _mesParamGridSettings = value;
                InvokeAsync(SaveStateAsync);
            }
        }
    }

    private async Task LoadStateAsync()
    {
        await Task.CompletedTask;

        var result = await _jsRuntime.InvokeAsync<string>("window.localStorage.getItem", "MesParamGridSettings");
        if (!string.IsNullOrEmpty(result))
        {
            _mesParamGridSettings = JsonSerializer.Deserialize<DataGridSettings>(result);
        }
    }

    private async Task SaveStateAsync()
    {
        await Task.CompletedTask;

        await _jsRuntime.InvokeVoidAsync("eval", $@"window.localStorage.setItem('MesParamGridSettings', '{JsonSerializer.Serialize<DataGridSettings>(MesParamGridSettings)}')");
    }



    async Task EditRow(MesParamDTO mesParamDTO)
    {
        //mesMaterialDTOToUpdate = mesMaterialDTO;
        //await mesMaterialDTOGrid.EditRow(mesMaterialDTO);
        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            IsLoading = true;

            MesParamDTO dialogResult;

            if (mesParamDTO == null)
            {
                IsLoading = false;
                dialogResult = await _dialogService.OpenAsync<AddEditMesParam>("Создать тэг СИР", new Dictionary<string, object>() { { "MesParamId", 0 } }, new DialogOptions() { Width = $"{1000}px" });
            }
            else
            {
                IsLoading = false;
                dialogResult = await _dialogService.OpenAsync<AddEditMesParam>("Изменить тэг СИР", new Dictionary<string, object>() { { "MesParamId", mesParamDTO.Id } }, new DialogOptions() { Width = $"{1000}px" });
            }


            if (dialogResult != null)
            {
                IsLoading = true;
                await LoadStateAsync();
                StateHasChanged();
                mesParamDTOs = await _mesParamRepository.GetAll(SD.SelectDictionaryScope.All);
                IsLoading = false;
                StateHasChanged();
            }

            IsLoading = false;
        }

    }


    async Task DeleteRow(MesParamDTO mesParamDTO)
    {

        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            if (_dialogs != null)
            {
                if (mesParamDTO.IsArchive != true)
                {
                    bool selectionResult = await _dialogs.ShowYesOrNoDialogBox("Удаление тэга СИР", "Удалить тэг \"" + mesParamDTO.Code + "\" в архив ?", "Удалить", "Отмена");
                    if (selectionResult == false)
                    {
                        await _jsRuntime.ToastrSuccess("Отмена удаления");
                        return;
                    }
                }
                else
                {
                    bool selectionResult = await _dialogs.ShowYesOrNoDialogBox("Восстановление тэга СИР", "Восстановить тэг СИР \"" + mesParamDTO.Code + "\" из архива ?", "Восстановить", "Отмена");
                    if (selectionResult == false)
                    {
                        await _jsRuntime.ToastrSuccess("Отмена восстановления");
                        return;
                    }
                }
            }



            //if (mesDepartmentDTOs.Contains(mesDepartmentDTO))
            //{
            if (mesParamDTO.IsArchive)
            {
                await _mesParamRepository.Delete(mesParamDTO.Id, SD.UpdateMode.RestoreFromArchive);
                mesParamDTO.IsArchive = false;
                await _jsRuntime.ToastrSuccess("Тэг СИР \"" + mesParamDTO.Name + "\" восстановлен из архива");
            }
            else
            {
                await _mesParamRepository.Delete(mesParamDTO.Id, SD.UpdateMode.MoveToArchive);
                mesParamDTO.IsArchive = true;
                await _jsRuntime.ToastrSuccess("Тэг СИР \"" + mesParamDTO.Name + "\" удалён в архив");
            }
            await mesParamDTOGrid.UpdateRow(mesParamDTO);
        }
    }

}