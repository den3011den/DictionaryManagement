@page "/reports/ReportTemplate/ReportEntityDetailes/{ReportEntityId}"
@attribute [Authorize]

@using DictionaryManagement_Business.Repository.IRepository;
@using DictionaryManagement_Models.IntDBModels
@using ClosedXML.Excel;
@using DocumentFormat.OpenXml;

@inject IJSRuntime _jsRuntime

@inject IReportEntityRepository _reportEntityRepository
@inject IReportEntityLogRepository _reportReportEntityLogRepository
@inject ISettingsRepository _settingsRepository
@inject IMesMovementsRepository _mesMovementsRepository
@inject IMesNdoStocksRepository _mesNdoStocksRepository
@inject ILogEventRepository _logEventRepository
@inject ISimpleExcelExportRepository _simpleExcelExportRepository


@inject DialogService _dialogService


@if (IsAdmin == true)
{
    <_Dialogs @ref="_dialogs"></_Dialogs>


    @if (IsLoading)
    {
        <div class="text-center">
            <img src="/images/loading.gif">
        </div>
    }
    else
    {

        <RadzenTabs @bind-SelectedIndex=@selectedTabIndex Change="@(args => OnTabChange(args))">
            <Tabs>
                <RadzenTabsItem Text="Детали">

                    <RadzenRow Gap="1rem">
                        <RadzenColumn Size="12" SizeMD="5">
                            <RadzenStack>
                                <RadzenFieldset Text="Данные экземпляра отчёта" Style="font-weight: bold;">
                                    <RadzenStack Gap="1rem">
                                        <RadzenFormField Text="ИД экземпляра отчёта" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenTextBox Value="@ActiveReportEntityDTO.Id.ToString()" ReadOnly="true" />
                                        </RadzenFormField>

                                        <RadzenFormField Text="Данные в отчёте с даты" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenDatePicker ShowTime="false" ShowSeconds="false" DateFormat="dd.MM.yyyy" @bind-Value="@ActiveReportEntityDTO.ReportTimeStart" ReadOnly="true" />
                                        </RadzenFormField>

                                        <RadzenFormField Text="Данные в отчёте по дату" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenDatePicker ShowTime="false" ShowSeconds="false" DateFormat="dd.MM.yyyy" @bind-Value="@ActiveReportEntityDTO.ReportTimeEnd" ReadOnly="true" />
                                        </RadzenFormField>

                                        <RadzenFormField Text="Производство" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenTextArea @bind-Value="@ActiveReportEntityDTO.ReportDepartmentDTOFK.ShortName" ReadOnly="true" />
                                        </RadzenFormField>

                                    </RadzenStack>
                                </RadzenFieldset>
                            </RadzenStack>
                            <RadzenStack>
                                <RadzenFieldset Text="Информация о скачивании отчёта" Style="font-weight: bold;">
                                    <RadzenStack Gap="1rem">
                                        <RadzenFormField Text="Время скачивания файла" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenDatePicker ShowTime="true" ShowSeconds="true" DateFormat="dd.MM.yyyy hh:mm:ss" @bind-Value="@ActiveReportEntityDTO.DownloadTime" ReadOnly="true" />
                                        </RadzenFormField>

                                        <RadzenFormField Text="Кто скачивал файл" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                            <RadzenTextBox @bind-Value="@ActiveReportEntityDTO.DownloadUserDTOFK.UserName" ReadOnly="true" />
                                        </RadzenFormField>

                                        <div class="rz-text-align-left">
                                            <RadzenCheckBox Disabled="true" @bind-Value=@ActiveReportEntityDTO.DownloadSuccessFlag Name="CheckBox31" />
                                            <RadzenLabel Style="font-weight: normal;" Text="Успех скачивания файла пользователем" Component="CheckBox3" />
                                        </div>

                                        <div class="rz-text-align-left">
                                            <RadzenButton title="Скачать файл" Icon="download" Disabled="@(String.IsNullOrEmpty(fileDownloadFullPath))" ButtonStyle="ButtonStyle.Light " Style="margin-top: 10px;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => DownloadReportEntityDownloadFile(@ActiveReportEntityDTO.Id))" @onclick:stopPropagation="true">
                                            </RadzenButton>
                                            <RadzenFormField Text="Скачанный файл на сервере" Variant="@variant" Style="width: 92%; max-width: 900px;">
                                                <RadzenTextBox @bind-Value="@fileDownloadFullPath" ReadOnly />
                                             </RadzenFormField>
                                         </div>

                                     </RadzenStack>
                                 </RadzenFieldset>
                             </RadzenStack>
                         </RadzenColumn>

                         <RadzenColumn Size="12" SizeMD="5">

                             <RadzenStack>
                                 <RadzenFieldset Text="Информация о шаблоне отчёта" Style="font-weight: bold;">
                                     <RadzenStack Gap="1rem">


                                         <RadzenFormField Text="ИД шаблона отчёта" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                             <RadzenTextBox Value="@ActiveReportEntityDTO.ReportTemplateId.ToString()" ReadOnly="true" />
                                         </RadzenFormField>

                                         <RadzenFormField Text="Тип шаблона отчёта" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                             <RadzenTextBox Value="@ActiveReportEntityDTO.ReportTemplateDTOFK.ReportTemplateTypeDTOFK.Name" ReadOnly="true" />
                                         </RadzenFormField>

                                         <RadzenFormField Text="Производство" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                             <RadzenTextBox Value="@ActiveReportEntityDTO.ReportTemplateDTOFK.MesDepartmentDTOFK.ShortName" ReadOnly="true" />
                                         </RadzenFormField>

                                         <RadzenFormField Text="Наименование шаблона отчёта" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                             <RadzenTextArea Value="@ActiveReportEntityDTO.ReportTemplateDTOFK.Description" ReadOnly="true" />
                                         </RadzenFormField>

                                     </RadzenStack>
                                 </RadzenFieldset>
                             </RadzenStack>


                             <RadzenStack>
                                 <RadzenFieldset Text="Информация о загрузке отчёта" Style="font-weight: bold;">
                                     <RadzenStack Gap="1rem">
                                         <RadzenFormField Text="Время загрузки файла" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                             <RadzenDatePicker ShowTime="true" ShowSeconds="true" DateFormat="dd.MM.yyyy hh:mm:ss" @bind-Value="@ActiveReportEntityDTO.UploadTime" ReadOnly="true" />
                                         </RadzenFormField>

                                         @if (ActiveReportEntityDTO.UploadUserDTOFK != null)
                                        {
                                            <RadzenFormField Text="Кто загружал файл" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                                <RadzenTextBox @bind-Value="@ActiveReportEntityDTO.UploadUserDTOFK.UserName"
                                                                      ReadOnly />
                                             </RadzenFormField>
                                        }
                                        else
                                        {
                                            <RadzenFormField Text="Кто загружал файл" Variant="@variant" Style="width: 100%; max-width: 940px;">
                                                <RadzenTextBox ReadOnly />
                                             </RadzenFormField>
                                        }

                                        <div class="rz-text-align-left">
                                            <RadzenCheckBox Disabled="true" @bind-Value=@ActiveReportEntityDTO.UploadSuccessFlag Name="CheckBox41" />
                                            <RadzenLabel Text="Успех загрузки файла пользователем" Component="CheckBox4" Style="margin-left: 1px; font-weight: normal;" />
                                        </div>

                                        <div class="rz-text-align-left">
                                            <RadzenButton title="Скачать файл" Icon="download" Disabled="@(String.IsNullOrEmpty(fileUploadFullPath))" ButtonStyle="ButtonStyle.Light" Style="margin-top: 10px;" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => DownloadReportEntityUploadFile(@ActiveReportEntityDTO.Id))" @onclick:stopPropagation="true">
                                            </RadzenButton>

                                            <RadzenFormField Text="Загруженный файл на сервере" Variant="@variant" Style="width: 92%; max-width: 900px;">
                                                <RadzenTextBox @bind-Value="@fileUploadFullPath"
                                                                          ReadOnly />
                                             </RadzenFormField>
                                         </div>
                                     </RadzenStack>
                                 </RadzenFieldset>
                             </RadzenStack>


                         </RadzenColumn>
                     </RadzenRow>
                 </RadzenTabsItem>
                 <RadzenTabsItem Text="Лист TagLibrary)">
                     <div class="row">
                         @if (IsLoading != true)
                        {
                            <ShowExcelSheetData gridSettings="TagLibrarySheetWithSirTagsGridSettings" gridRef="tagExcelSheetWithSirTagsDTOGrid" gridData="tagLibraryExcelSheetWithSirTagsDTOList"></ShowExcelSheetData>

                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Лист StartEndDate">
                    <div class="row">
                        @if (IsLoading != true)
                        {
                            <ShowExcelSheetData gridSettings="StartEndDateSheetWithSirTagsGridSettings" gridRef="startEndDateExcelSheetWithSirTagsDTOGrid" gridData="startEndDateExcelSheetWithSirTagsDTOList"></ShowExcelSheetData>

                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Лист ReasonLibrary">
                    <div class="row">
                        @if (IsLoading != true)
                        {
                            <ShowExcelSheetData gridSettings="ReasonLibrarySheetWithSirTagsGridSettings" gridRef="reasonLibraryExcelSheetWithSirTagsDTOGrid" gridData="reasonLibraryExcelSheetWithSirTagsDTOList"></ShowExcelSheetData>
                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Лист InputData">
                    <div class="row">
                        @if (IsLoading != true)
                        {
                            <ShowExcelSheetData gridSettings="InputDataSheetWithSirTagsGridSettings" gridRef="inputDataExcelSheetWithSirTagsDTOGrid" gridData="inputDataExcelSheetWithSirTagsDTOList"></ShowExcelSheetData>
                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Лист OutputData" Disabled="@(ActiveReportEntityDTO.UploadSuccessFlag ? false : true)">
                    <div class="row">
                        @if (IsLoading != true)
                        {
                            <p>
                                <center>
                                    <RadzenLabel Style="font-size: 12px; color:powderblue; font-weight:bold;" Text="Отображаются только кэшированные данные, если они есть в файле. Пересчёт формул не производится" />
                                </center>
                            </p>
                            <ShowExcelSheetData gridSettings="OutputDataSheetWithSirTagsGridSettings" gridRef="outputDataExcelSheetWithSirTagsDTOGrid" gridData="outputDataExcelSheetWithSirTagsDTOList"></ShowExcelSheetData>

                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                 <RadzenTabsItem Text="Данные в Архиве данных пришедшие из отчёта" Disabled="@(ActiveReportEntityDTO.UploadSuccessFlag ? false : true)">
                     <div class="row">
                         @if (IsLoading != true)
                        {
                            @if (@ActiveReportEntityDTO.ReportTemplateDTOFK.ReportTemplateTypeDTOFK.Name.Trim().ToUpper() != "РУЧНОЙ ВВОД НДО")
                            {
                                <RadzenDataGridApp @bind-Settings="@MesMovementsGridSettingsForReportEntity" @ref="mesMovementsDTOGrid" AllowAlternatingRows="true" AllowFiltering="true" AllowPaging="false" AllowSorting="true" AllowMultiColumnSorting="true" EditMode="DataGridEditMode.Single"
                                                   Data="@mesMovementsDTOs" TItem="MesMovementsDTO"
                                                   FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                   FilterMode="FilterMode.Simple"
                                                   Density=Density.Compact
                                                   ShowPagingSummary="true"
                                                   Style="height:70vh"
                                                   AllowVirtualization="true"
                                                   AllowColumnReorder="true"
                                                   AllowColumnResize="true"
                                                   ColumnWidth="200px"
                                                   GridLines="DataGridGridLines.Both">

                                    @* Style=@(iconMenuActive ? "height:calc(100vh - 170px); width:1760px" : "height:calc(100vh - 170px); width:1600px") *@

                                    <Columns>
                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ToStringId" Title="Ид записи" TextAlign="TextAlign.Center"
                                                              FilterProperty="ToStringId" FilterOperator="FilterOperator.Contains" SortProperty="Id">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @data1.ToStringId
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="AddTime" Title="Время добавления" TextAlign="TextAlign.Center" Filterable="true" Sortable="true">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    <strong>
                                                        @data1.AddTime.ToString("dd.MM.yyyy HH:mm:ss.fff")
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="DataTypeDTOFK.Name" Title="Тип"
                                                              TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                @if (data1.DataTypeDTOFK != null)
                                                {

                                                    <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                        @data1.DataTypeDTOFK.Name
                                                    </div>
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="MesParamDTOFK.Code" Title="Тэг (code)"
                                                              TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @(data1.MesParamDTOFK.Code == null ? "" : data1.MesParamDTOFK.Code)
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="MesParamDTOFK.Name" Title="Тэг (name)"
                                                              TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @(data1.MesParamDTOFK.Name == null ? "" : data1.MesParamDTOFK.Name)
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>


                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ValueTime" Title="Время значения" TextAlign="TextAlign.Center" Filterable="true" Sortable="true">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    <strong>
                                                        @data1.ValueTime.ToString("dd.MM.yyyy HH:mm:ss.fff")
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ToStringValue" Title="Значение" TextAlign="TextAlign.Center" Filterable="true" Sortable="true"
                                                              FilterProperty="ToStringValue" SortProperty="Value" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-wrap; font-size: 12px">
                                                    <strong>
                                                        @data1.ToStringValue
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ToStringPreviousRecordId" Title="ИД пред. записи" FilterProperty="ToStringPreviousRecordId" SortProperty="ToStringPreviousRecordId" TextAlign="TextAlign.Center" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                @if (data1.ToStringPreviousRecordId != null)
                                                {
                                                    <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                        @data1.ToStringPreviousRecordId
                                                    </div>
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="MesGoneBool" Title="MES забрал" Filterable="true" TextAlign="TextAlign.Center">
                                            <Template Context="data">
                                                <RadzenCheckBox @bind-Value=data.MesGoneBool ReadOnly="true" TriState="false" TValue="bool" />
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="MesGoneTime" Title="Время MES забрал" TextAlign="TextAlign.Center"
                                                              FilterProperty="MesGoneTime" FilterOperator="FilterOperator.Contains" SortProperty="MesGoneTime">
                                            <Template Context="data1">
                                                @if (data1.MesGoneTime != null)
                                                {
                                                    <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                        <strong>
                                                            @(((DateTime)data1.MesGoneTime).ToString("dd.MM.yyyy HH:mm:ss.fff"))
                                                        </strong>
                                                    </div>
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="SapGoneBool" Title="Sap забрал" Filterable="true" TextAlign="TextAlign.Center">
                                            <Template Context="data">
                                                <RadzenCheckBox @bind-Value=data.SapGoneBool ReadOnly="true" TriState="false" TValue="bool" />
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="SapMovementsOUTDTOFK.SapGoneTime" Title="Время Sap забрал" TextAlign="TextAlign.Center"
                                                              FilterProperty="SapMovementsOUTDTOFK.SapGoneTime" FilterOperator="FilterOperator.Contains" SortProperty="SapMovementsOUTDTOFK.SapGoneTime">
                                            <Template Context="data1">
                                                @if (data1.SapMovementOutId != null)
                                                {
                                                    @if (data1.SapMovementsOUTDTOFK.SapGoneTime != null)
                                                    {
                                                        <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                            <strong>
                                                                @(((DateTime)data1.SapMovementsOUTDTOFK.SapGoneTime).ToString("dd.MM.yyyy HH:mm:ss.fff"))
                                                            </strong>
                                                        </div>
                                                    }
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ToStringCorrectionReason" Title="Причина корректировки"
                                                              TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @(data1.ToStringCorrectionReason == null ? "" : data1.ToStringCorrectionReason)
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesMovementsDTO" Property="ToStringCorrectionComment" Title="Комментарий корректировки"
                                                              TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @(data1.ToStringCorrectionComment == null ? "" : data1.ToStringCorrectionComment)
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGridApp>
                            }
                            else
                            {
                                <RadzenDataGridApp @bind-Settings="@MesNdoStocksGridSettingsForReportEntity" @ref="mesNdoStocksDTOGrid" AllowAlternatingRows="true" AllowFiltering="true" AllowPaging="false" AllowSorting="true" AllowMultiColumnSorting="true" EditMode="DataGridEditMode.Single"
                                                   Data="@mesNdoStocksDTOs" TItem="MesNdoStocksDTO"
                                                   FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                   FilterMode="FilterMode.Simple"
                                                   Density=Density.Compact
                                                   ShowPagingSummary="true"
                                                   AllowVirtualization="true"
                                                   AllowColumnReorder="true"
                                                   AllowColumnResize="true"
                                                   Style="height:70vh"
                                                   ColumnWidth="200px"
                                                   GridLines="DataGridGridLines.Both">

                                    <Columns>
                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="ToStringId" Title="Ид записи" TextAlign="TextAlign.Center"
                                                              FilterProperty="ToStringId" FilterOperator="FilterOperator.Contains" SortProperty="Id">
                                            <Template Context="data1">
                                                <div style="white-space:pre-wrap; font-size: 12px">
                                                    @data1.ToStringId
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="MesParamDTOFK.ToStringId" Title="ИД тэга СИР" FilterProperty="MesParamDTOFK.ToStringId" SortProperty="MesParamDTOFK.ToStringId" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @data1.MesParamDTOFK.ToStringId
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>


                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="MesParamDTOFK.Code" Title="Код тэга СИР" FilterProperty="MesParamDTOFK.Code" SortProperty="MesParamDTOFK.Code" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    <strong>
                                                        @data1.MesParamDTOFK.Code
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="MesParamDTOFK.Name" Title="Наименование тэга СИР" FilterProperty="MesParamDTOFK.Name" SortProperty="MesParamDTOFK.Name" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    @data1.MesParamDTOFK.Name
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="AddTime" Title="Время добавления" TextAlign="TextAlign.Center" Filterable="true" Sortable="true">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    <strong>
                                                        @data1.AddTime.ToString("dd.MM.yyyy HH:mm:ss.fff")
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="ValueTime" Title="Время значения" TextAlign="TextAlign.Center" Filterable="true" Sortable="true">
                                            <Template Context="data1">
                                                <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                    <strong>
                                                        @data1.ValueTime.ToString("dd.MM.yyyy HH:mm:ss.fff")
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="ToStringValue" Title="Значение" TextAlign="TextAlign.Center" Filterable="true" Sortable="true"
                                                              FilterProperty="ToStringValue" SortProperty="Value" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-wrap; font-size: 12px">
                                                    <strong>
                                                        @data1.ToStringValue
                                                    </strong>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="ToStringValueDifference" Title="Разность" TextAlign="TextAlign.Center" Filterable="true" Sortable="true"
                                                              FilterProperty="ToStringValueDifference" SortProperty="ValueDifference" FilterOperator="FilterOperator.Contains">
                                            <Template Context="data1">
                                                <div style="white-space:pre-wrap; font-size: 12px">
                                                    <strong>
                                                        @data1.ToStringValueDifference
                                                    </strong>
                                                </div>
                                            </Template>

                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="SapNdoOUTDTOFK.ToStringId" Title="ИД записи в витрине" TextAlign="TextAlign.Center"
                                                              FilterProperty="SapNdoOUTDTOFK.ToStringId" FilterOperator="FilterOperator.Contains" SortProperty="SapNdoOUTDTOFK.ToStringId">
                                            <Template Context="data1">
                                                @if (data1.SapNdoOutId != null)
                                                {
                                                    @if (data1.SapNdoOUTDTOFK != null)
                                                    {
                                                        <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                            <strong>
                                                                @data1.SapNdoOUTDTOFK.ToStringId
                                                            </strong>
                                                        </div>
                                                    }
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="SapGoneBool" Title="Sap забрал" Filterable="true" TextAlign="TextAlign.Center">
                                            <Template Context="data">
                                                <RadzenCheckBox @bind-Value=data.SapGoneBool ReadOnly="true" TriState="false" TValue="bool" />
                                            </Template>
                                        </RadzenDataGridColumn>


                                        <RadzenDataGridColumn TItem="MesNdoStocksDTO" Property="SapNdoOUTDTOFK.SapGoneTime" Title="Время Sap забрал" TextAlign="TextAlign.Center"
                                                              FilterProperty="SapNdoOUTDTOFK.SapGoneTime" FilterOperator="FilterOperator.Contains" SortProperty="SapNdoOUTDTOFK.SapGoneTime">
                                            <Template Context="data1">
                                                @if (data1.SapNdoOutId != null)
                                                {
                                                    @if (data1.SapNdoOUTDTOFK.SapGoneTime != null)
                                                    {
                                                        <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                            <strong>
                                                                @data1.SapNdoOUTDTOFK.SapGoneTime
                                                            </strong>
                                                        </div>
                                                    }
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGridApp>
                            }
                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>
                            }
                        }
                    </div>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Журнал событий (LogEvent)">
                    <div class="row">
                        @if (IsLoading != true)
                        {
                            <RadzenDataGridApp @bind-Settings="@LogEventGridSettingsForReportEntity" @ref="logEventDTOGrid" AllowAlternatingRows="true" AllowFiltering="true" AllowPaging="false" AllowSorting="true" AllowMultiColumnSorting="true" EditMode="DataGridEditMode.Single"
                                               Data="@logEventDTOs" TItem="LogEventDTO"
                                               FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                               FilterMode="FilterMode.Simple"
                                               Density=Density.Compact
                                               ShowPagingSummary="true"
                                               AllowVirtualization="true"
                                               Style="height:70vh">
                                <Columns>
                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="ToStringId" Title="Ид записи" Width="35px" TextAlign="TextAlign.Center"
                                                          FilterProperty="ToStringId" FilterOperator="FilterOperator.Contains" SortProperty="Id">
                                        <Template Context="data1">
                                            <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                @data1.ToStringId
                                            </div>
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="EventTime" Title="Время" Width="60px" TextAlign="TextAlign.Center" Filterable="true" Sortable="true">
                                        <Template Context="data1">
                                            <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                <strong>
                                                    @data1.EventTime
                                                </strong>
                                            </div>
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="LogEventTypeDTOFK.Name" Title="Тип события" Width="100px"
                                                          TextAlign="TextAlign.Center" Filterable="true" Sortable="true" FilterOperator="FilterOperator.Contains">
                                        <Template Context="data1">
                                            <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                @data1.LogEventTypeDTOFK.Name
                                            </div>
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="Description" Title="Описание" Width="130px" TextAlign="TextAlign.Start"
                                                          FilterProperty="Description" FilterOperator="FilterOperator.Contains" SortProperty="Description">
                                        <Template Context="data1">
                                            <div style="white-space:pre-line; word-wrap: break-word; font-size: 12px">
                                                @data1.Description
                                            </div>
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="IsCriticalBool" Title="Крит." Filterable="true" Width="35px" TextAlign="TextAlign.Center">
                                        <Template Context="data">
                                            @if (data.IsCriticalBool)
                                            {
                                                <RadzenCheckBox @bind-Value=data.IsCriticalBool ReadOnly="true" TriState="false" TValue="bool"
                                                                Style="background-color: red;border: 1px solid red;" />
                                            }
                                            else
                                            {
                                                <RadzenCheckBox @bind-Value=data.IsCriticalBool ReadOnly="true" TriState="false" TValue="bool" />
                                            }
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="IsErrorBool" Title="Ошибка" Filterable="true" Width="35px" TextAlign="TextAlign.Center">
                                        <Template Context="data">
                                            @if (data.IsErrorBool)
                                            {

                                                <RadzenCheckBox @bind-Value=data.IsErrorBool ReadOnly="true" TriState="false" TValue="bool"
                                                                Style="background-color: red;border: 1px solid red;" />
                                            }
                                            else
                                            {
                                                <RadzenCheckBox @bind-Value=data.IsErrorBool ReadOnly="true" TriState="false" TValue="bool" />
                                            }
                                        </Template>
                                    </RadzenDataGridColumn>

                                    <RadzenDataGridColumn TItem="LogEventDTO" Property="IsWarningBool" Title="Предупреждение" Filterable="true" Width="35px" TextAlign="TextAlign.Center">
                                        <Template Context="data">
                                            <RadzenCheckBox @bind-Value=data.IsWarningBool ReadOnly="true" TriState="false" TValue="bool" />
                                        </Template>
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGridApp>
                        }
                        else
                        {
                            if (IsLoading)
                            {
                                //отображение gif загрузки
                                <div class="text-center">
                                    <img src="/images/loading.gif">
                                </div>

                            }
                        }
                    </div>
                </RadzenTabsItem>
            </Tabs>

        </RadzenTabs>

        @*    <div class="form-group py-2">
        <NavLink @onclick="(() => ReportEntityDetailesClose())" class="btn btn-primary">OK</NavLink>
    </div>*@

        @*  </EditForm> *@
    }
}


@code {

    [CascadingParameter]
    bool iconMenuActive { get; set; }

    int selectedTabIndex = 0;

    bool firstTimeMesMovementsTab = true;
    bool firstTimeLogEventTab = true;
    bool firstTagLibraryTab = true;
    bool firstOutputDataTab = true;
    bool firstInputDataTab = true;
    bool firstStartEndDateTab = true;
    bool firstReasonLibraryTab = true;

    _Dialogs? _dialogs { get; set; }

    IEnumerable<ReportEntityLogDTO>? reportEntityLogDTOs;

    IEnumerable<MesMovementsDTO>? mesMovementsDTOs;
    RadzenDataGrid<MesMovementsDTO> mesMovementsDTOGrid;

    IEnumerable<MesNdoStocksDTO>? mesNdoStocksDTOs;
    RadzenDataGrid<MesNdoStocksDTO> mesNdoStocksDTOGrid;

    IEnumerable<LogEventDTO>? logEventDTOs;
    RadzenDataGrid<LogEventDTO> logEventDTOGrid;

    ExcelSheetWithSirTagsDTOList tagLibraryExcelSheetWithSirTagsDTOList;
    RadzenDataGrid<ExcelSheetWithSirTagsDTO> tagExcelSheetWithSirTagsDTOGrid;

    ExcelSheetWithSirTagsDTOList outputDataExcelSheetWithSirTagsDTOList;
    RadzenDataGrid<ExcelSheetWithSirTagsDTO> outputDataExcelSheetWithSirTagsDTOGrid;

    ExcelSheetWithSirTagsDTOList inputDataExcelSheetWithSirTagsDTOList;
    RadzenDataGrid<ExcelSheetWithSirTagsDTO> inputDataExcelSheetWithSirTagsDTOGrid;

    ExcelSheetWithSirTagsDTOList startEndDateExcelSheetWithSirTagsDTOList;
    RadzenDataGrid<ExcelSheetWithSirTagsDTO> startEndDateExcelSheetWithSirTagsDTOGrid;

    ExcelSheetWithSirTagsDTOList reasonLibraryExcelSheetWithSirTagsDTOList;
    RadzenDataGrid<ExcelSheetWithSirTagsDTO> reasonLibraryExcelSheetWithSirTagsDTOGrid;

    XLWorkbook? workbook = null;

    [Parameter]
    public Guid ReportEntityId { get; set; }

    Variant variant = Variant.Outlined;

    public string reportDownloadPath = "";
    public string reportUploadPath = "";
    public string fileDownloadFullPath = "";
    public string fileUploadFullPath = "";

    public bool IsLoading { get; set; }
    public bool IsAdmin { get; set; }

    public ReportEntityDTO? ActiveReportEntityDTO { get; set; }

    private string Title { get; set; } = "Данные экземпляра отчёта";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            IsLoading = true;
            StateHasChanged();

            ActiveReportEntityDTO = await _reportEntityRepository.GetById(ReportEntityId);
            reportEntityLogDTOs = await _reportReportEntityLogRepository.GetByReportEntityId(ReportEntityId);
            if (reportEntityLogDTOs == null)
            {
                reportEntityLogDTOs = new List<ReportEntityLogDTO>();
            }
            reportUploadPath = (await _settingsRepository.GetByName("ReportUploadPath")).Value;
            if (String.IsNullOrEmpty(ActiveReportEntityDTO.UploadReportFileName))
                fileUploadFullPath = "";
            else
                fileUploadFullPath = reportUploadPath + ActiveReportEntityDTO.UploadReportFileName;
            reportDownloadPath = (await _settingsRepository.GetByName("ReportDownloadPath")).Value;
            if (String.IsNullOrEmpty(ActiveReportEntityDTO.DownloadReportFileName))
                fileDownloadFullPath = "";
            else
                fileDownloadFullPath = reportDownloadPath + ActiveReportEntityDTO.DownloadReportFileName;

            IsLoading = false;
            IsAdmin = true;
            StateHasChanged();

        }
    }

    private async Task ReportEntityDetailesClose()
    {
        _dialogService.Close(null);
    }

    async Task DownloadReportEntityDownloadFile(Guid id)
    {
        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            IsAdmin = true;
            await _jsRuntime.InvokeVoidAsync("open", "/DownloadFileController/DownloadReportEntityDownloadFile/" + id.ToString(), "_blank");
        }
    }

    async Task DownloadReportEntityUploadFile(Guid id)
    {
        if (await _authorizationRepository.CurrentUserIsInAdminRole(SD.MessageBoxMode.On))
        {
            IsAdmin = true;
            await _jsRuntime.InvokeVoidAsync("open", "/DownloadFileController/DownloadReportEntityUploadFile/" + id.ToString(), "_blank");
        }
    }


    DataGridSettings _mesMovementsGridSettingsForReportEntity;
    public DataGridSettings MesMovementsGridSettingsForReportEntity
    {
        get
        {
            return _mesMovementsGridSettingsForReportEntity;
        }
        set
        {
            if (_mesMovementsGridSettingsForReportEntity != value)
            {
                _mesMovementsGridSettingsForReportEntity = value;
            }
        }
    }

    DataGridSettings _logEventGridSettingsForReportEntity;
    public DataGridSettings LogEventGridSettingsForReportEntity
    {
        get
        {
            return _logEventGridSettingsForReportEntity;
        }
        set
        {
            if (_logEventGridSettingsForReportEntity != value)
            {
                _logEventGridSettingsForReportEntity = value;
            }
        }
    }

    DataGridSettings _mesNdoStocksGridSettingsForReportEntity;
    public DataGridSettings MesNdoStocksGridSettingsForReportEntity
    {
        get
        {
            return _mesNdoStocksGridSettingsForReportEntity;
        }
        set
        {
            if (_mesNdoStocksGridSettingsForReportEntity != value)
            {
                _mesNdoStocksGridSettingsForReportEntity = value;
            }
        }
    }

    DataGridSettings _tagLibrarySheetWithSirTagsGridSettings;
    public DataGridSettings TagLibrarySheetWithSirTagsGridSettings
    {
        get
        {
            return _tagLibrarySheetWithSirTagsGridSettings;
        }
        set
        {
            if (_tagLibrarySheetWithSirTagsGridSettings != value)
            {
                _tagLibrarySheetWithSirTagsGridSettings = value;
            }
        }
    }

    DataGridSettings _outputDataSheetWithSirTagsGridSettings;
    public DataGridSettings OutputDataSheetWithSirTagsGridSettings
    {
        get
        {
            return _outputDataSheetWithSirTagsGridSettings;
        }
        set
        {
            if (_outputDataSheetWithSirTagsGridSettings != value)
            {
                _outputDataSheetWithSirTagsGridSettings = value;
            }
        }
    }

    DataGridSettings _inputDataSheetWithSirTagsGridSettings;
    public DataGridSettings InputDataSheetWithSirTagsGridSettings
    {
        get
        {
            return _inputDataSheetWithSirTagsGridSettings;
        }
        set
        {
            if (_inputDataSheetWithSirTagsGridSettings != value)
            {
                _inputDataSheetWithSirTagsGridSettings = value;
            }
        }
    }


    DataGridSettings _startEndDateSheetWithSirTagsGridSettings;
    public DataGridSettings StartEndDateSheetWithSirTagsGridSettings
    {
        get
        {
            return _startEndDateSheetWithSirTagsGridSettings;
        }
        set
        {
            if (_startEndDateSheetWithSirTagsGridSettings != value)
            {
                _startEndDateSheetWithSirTagsGridSettings = value;
            }
        }
    }

    DataGridSettings _reasonLibrarySheetWithSirTagsGridSettings;
    public DataGridSettings ReasonLibrarySheetWithSirTagsGridSettings
    {
        get
        {
            return _reasonLibrarySheetWithSirTagsGridSettings;
        }
        set
        {
            if (_reasonLibrarySheetWithSirTagsGridSettings != value)
            {
                _reasonLibrarySheetWithSirTagsGridSettings = value;
            }
        }
    }



    async Task OnTabChange(int value)
    {
        selectedTabIndex = value;

        switch (selectedTabIndex)
        {
            case 0:
                {
                    break;
                }

            case 1: // TagLibrary
                {
                    await GetTagLibrarySheetWithSirTagsDTOs();
                    break;
                }
            case 2: // StartEndDate
                {
                    await GetStartEndDateSheetWithSirTagsDTOs();
                    break;
                }

            case 3: // ReasonLibrary
                {
                    await GetReasonLibrarySheetWithSirTagsDTOs();
                    break;
                }

            case 4: // InputData
                {
                    await GetInputDataSheetWithSirTagsDTOs();
                    break;
                }

            case 5: // OutputData
                {
                    await GetOutputDataSheetWithSirTagsDTOs();
                    break;
                }

            case 6: // MesMovements
                {
                    if (ActiveReportEntityDTO.ReportTemplateDTOFK.ReportTemplateTypeDTOFK.Name.Trim().ToUpper() != "РУЧНОЙ ВВОД НДО")
                    {
                        await GetMesMovementsDTOs(ReportEntityId);
                    }
                    else
                    {
                        await GetMesNdoStocksDTOs(ReportEntityId);
                    }
                    break;
                }

            case 7: // LogEvent
                {
                    await GetLogEventDTOs(ReportEntityId);
                    break;
                }
            default:
                {
                    break;
                }
        }

        StateHasChanged();
    }

    async Task GetMesMovementsDTOs(Guid reportEntityId)
    {
        if (firstTimeMesMovementsTab)
        {
            IsLoading = true;
            StateHasChanged();
            mesMovementsDTOs = await _mesMovementsRepository.GetAllByReportEntityId(ReportEntityId);
            IsLoading = false;
            firstTimeMesMovementsTab = false;
            StateHasChanged();

        }
    }

    async Task GetMesNdoStocksDTOs(Guid reportEntityId)
    {
        if (firstTimeMesMovementsTab)
        {
            IsLoading = true;
            StateHasChanged();
            mesNdoStocksDTOs = await _mesNdoStocksRepository.GetAllByReportEntityId(ReportEntityId);
            IsLoading = false;
            firstTimeMesMovementsTab = false;
            StateHasChanged();

        }
    }

    async Task GetLogEventDTOs(Guid reportEntityId)
    {
        if (firstTimeLogEventTab)
        {
            IsLoading = true;
            StateHasChanged();
            logEventDTOs = await _logEventRepository.GetAllByReportEntityId(ReportEntityId);
            IsLoading = false;
            firstTimeLogEventTab = false;
            StateHasChanged();
        }
    }

    async Task GetTagLibrarySheetWithSirTagsDTOs()
    {
        if (firstTagLibraryTab)
        {
            IsLoading = true;
            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

            Tuple<ExcelSheetWithSirTagsDTOList, string, XLWorkbook?> tmp = await _simpleExcelExportRepository.GetSheetData(ActiveReportEntityDTO, SD.ReportTagLibrarySheetSettingName, workbook);

            tagLibraryExcelSheetWithSirTagsDTOList = tmp.Item1;
            string errorString = tmp.Item2;
            workbook = tmp.Item3;

            if (errorString != "")
            {
                await _jsRuntime.ToastrError(errorString);
            }
            IsLoading = false;
            firstTagLibraryTab = false;

            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

        }
    }

    async Task GetOutputDataSheetWithSirTagsDTOs()
    {
        if (firstOutputDataTab)
        {
            IsLoading = true;
            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

            Tuple<ExcelSheetWithSirTagsDTOList, string, XLWorkbook?> tmp = await _simpleExcelExportRepository.GetSheetData(ActiveReportEntityDTO, SD.ReportOutputSheetSettingName, workbook);

            outputDataExcelSheetWithSirTagsDTOList = tmp.Item1;
            string errorString = tmp.Item2;
            workbook = tmp.Item3;

            if (errorString != "")
            {
                await _jsRuntime.ToastrError(errorString);
            }
            IsLoading = false;
            firstOutputDataTab = false;

            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);


        }
    }

    async Task GetInputDataSheetWithSirTagsDTOs()
    {
        if (firstInputDataTab)
        {
            IsLoading = true;
            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

            Tuple<ExcelSheetWithSirTagsDTOList, string, XLWorkbook?> tmp = await _simpleExcelExportRepository.GetSheetData(ActiveReportEntityDTO, SD.ReportInputSheetSettingName, workbook);

            inputDataExcelSheetWithSirTagsDTOList = tmp.Item1;
            string errorString = tmp.Item2;
            workbook = tmp.Item3;

            if (errorString != "")
            {
                await _jsRuntime.ToastrError(errorString);
            }
            IsLoading = false;
            firstInputDataTab = false;

            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);
        }
    }

    async Task GetStartEndDateSheetWithSirTagsDTOs()
    {
        if (firstStartEndDateTab)
        {
            IsLoading = true;
            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

            Tuple<ExcelSheetWithSirTagsDTOList, string, XLWorkbook?> tmp = await _simpleExcelExportRepository.GetSheetData(ActiveReportEntityDTO, SD.ReportStartEndDateSheetSettingName, workbook);

            startEndDateExcelSheetWithSirTagsDTOList = tmp.Item1;
            string errorString = tmp.Item2;
            workbook = tmp.Item3;

            if (errorString != "")
            {
                await _jsRuntime.ToastrError(errorString);
            }
            IsLoading = false;
            firstStartEndDateTab = false;

            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);
        }
    }

    async Task GetReasonLibrarySheetWithSirTagsDTOs()
    {
        if (firstReasonLibraryTab)
        {
            IsLoading = true;
            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);

            Tuple<ExcelSheetWithSirTagsDTOList, string, XLWorkbook?> tmp = await _simpleExcelExportRepository.GetSheetData(ActiveReportEntityDTO, SD.ReportReasonLiabrarySheetSettingName, workbook);

            reasonLibraryExcelSheetWithSirTagsDTOList = tmp.Item1;
            string errorString = tmp.Item2;
            workbook = tmp.Item3;

            if (errorString != "")
            {
                await _jsRuntime.ToastrError(errorString);
            }
            IsLoading = false;
            firstReasonLibraryTab = false;

            await Task.Delay(200);
            await InvokeAsync(StateHasChanged);
        }
    }

}
